name: BDD Tests

on:
  push:
    branches: [ main, develop, feature/* ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

env:
  NODE_VERSION: '20.x'
  PNPM_VERSION: '8.15.6'
  NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
  NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}

jobs:
  test-setup:
    name: Test Setup Validation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'
          
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        
      - name: Run setup tests
        run: pnpm --filter @founders-day/frontend test:cucumber -- features/test-setup.feature --if-present
        continue-on-error: true
        
  bdd-tests:
    name: BDD Feature Tests
    needs: test-setup
    runs-on: ubuntu-latest
    if: always()
    strategy:
      matrix:
        feature-set:
          - name: "Authentication"
            files: "features/user-registration.feature"
            tags: "@smoke"
          - name: "Registration"
            files: "features/registration/*.feature"
            tags: "@registration"
          - name: "Profile"
            files: "features/profile-management.feature"
            tags: "@profile"
          - name: "Navigation"
            files: "features/navigation.feature"
            tags: "@navigation"
          - name: "Search"
            files: "features/search-functionality.feature"
            tags: "@search"
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'
          
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        
      - name: Install Playwright browsers
        run: pnpm --filter @founders-day/frontend exec playwright install chromium
        
      - name: Run ${{ matrix.feature-set.name }} tests
        run: |
          cd apps/frontend
          pnpm test:cucumber -- ${{ matrix.feature-set.files }} --tags "${{ matrix.feature-set.tags }}" --if-present
        continue-on-error: true
        env:
          CI: true
          
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: bdd-test-results-${{ matrix.feature-set.name }}
          path: apps/frontend/reports/
          retention-days: 7
          
  bdd-parallel-tests:
    name: BDD Parallel Execution Tests
    needs: test-setup
    if: always()
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'
          
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        
      - name: Install Playwright browsers
        run: pnpm --filter @founders-day/frontend exec playwright install chromium
        
      - name: Run parallel tests
        run: pnpm --filter @founders-day/frontend test:cucumber:parallel --if-present
        continue-on-error: true
        env:
          CI: true
          
  test-report:
    name: Generate Test Report
    needs: [bdd-tests, bdd-parallel-tests]
    if: always()
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        
      - name: Download all test artifacts
        uses: actions/download-artifact@v3
        with:
          path: test-results/
          
      - name: Generate summary report
        run: |
          echo "## BDD Test Results Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Test Execution Completed" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Test reports have been generated and are available as artifacts." >> $GITHUB_STEP_SUMMARY