name: CI Pipeline

on:
  push:
    branches: [ main, develop, feature/* ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

env:
  NODE_VERSION: '20.x'

jobs:
  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run linters
        run: |
          npm run lint --workspaces --if-present
          
  typecheck:
    name: TypeScript Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build shared types
        run: npm run build --workspace=shared-types
        
      - name: Run TypeScript
        run: npm run typecheck --workspaces --if-present
        
  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        workspace:
          - founders-day-admin
          - founders-day-frontend
          - "@founders-day/test-utils"
          
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build dependencies
        run: |
          npm run build --workspace=shared-types --if-present
          npm run build --workspace=@founders-day/test-utils --if-present
          
      - name: Run tests for ${{ matrix.workspace }}
        run: |
          npm run test --workspace=${{ matrix.workspace }} --if-present -- \
            --coverage \
            --reporter=json \
            --reporter=html
            
      - name: Upload coverage
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ matrix.workspace }}
          path: |
            ${{ matrix.workspace }}/coverage/
          retention-days: 30
          
  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: founders_day_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
          
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Setup test database
        run: |
          npm run db:migrate:test --if-present
          npm run db:seed:test --if-present
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/founders_day_test
          
      - name: Run integration tests
        run: npm run test:integration --if-present
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/founders_day_test
          
  build:
    name: Build Applications
    runs-on: ubuntu-latest
    strategy:
      matrix:
        app:
          - name: admin
            workspace: founders-day-admin
          - name: frontend
            workspace: founders-day-frontend
            
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build shared packages
        run: |
          npm run build --workspace=shared-types
          npm run build --workspace=@founders-day/test-utils
          
      - name: Build ${{ matrix.app.name }}
        run: npm run build --workspace=${{ matrix.app.workspace }}
        env:
          NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
          NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
          
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-${{ matrix.app.name }}
          path: |
            ${{ matrix.app.workspace }}/.next/
            ${{ matrix.app.workspace }}/out/
          retention-days: 7
          
  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          
      - name: Run npm audit
        run: npm audit --workspaces
        continue-on-error: true
        
      - name: Run Snyk scan
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --all-projects --severity-threshold=high
        continue-on-error: true